# mount this file directly into the container as /etc/nginx/nginx.conf

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

# we need to load this module for the js_include to work below
# most of the documentation online is about the http_js module
# we need the stream_js module!
load_module modules/ngx_stream_js_module.so;

events {
    worker_connections  1024;
}

http {
    # This is our upstream connection to the njs translation process
    upstream dohloop {
        zone dohloop 64k;
        server 127.0.0.1:8053;
    }

    # This virtual server accepts HTTP/2 over HTTPS
    server {
        listen [::]:443 ssl http2 ipv6only=on;
        listen 443 ssl http2;
        server_name {{ __domain_name }};

        ssl_protocols TLSv1.3; # TLS 1.3 only
        ssl_certificate /certs/{{ __domain_name }}/fullchain.cer;
        ssl_certificate_key /certs/{{ __domain_name }}/{{ __domain_name }}.key;

        # Return 404 for non-DoH requests
        location / {
            return 404 "404 Not Found\n";
        }

        # Here we downgrade the HTTP/2 request to HTTP/1.1 and forward it to
        # the DoH loop service
        location /dns-query {
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_pass http://dohloop;
        }
    }
}

stream {
    # Import the JavaScript file that processes the DoH(?) packets
    js_include /etc/nginx/njs.d/nginx_stream.js;

    # DNS upstream pool (can also be DoT)
    upstream dns {
        zone dns 64k;
        server 10.0.0.3:53;
    }

    # DNS over HTTPS (gateway) translation process
    # Upstream can be either DNS (TCP) or DoT 
    server {
        listen 127.0.0.1:8053;
        js_filter dns_filter_doh_request;
        proxy_pass dns;
    }
}