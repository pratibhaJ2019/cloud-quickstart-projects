---
version: "3.7"

services:
  cloudflared:
    container_name: cloudflared
    image: visibilityspots/cloudflared:latest
    environment:
      PORT: '5053'
      # Servers from Mozilla's trusted list: https://wiki.mozilla.org/Security/DOH-resolver-policy
      UPSTREAM1: 'https://mozilla.cloudflare-dns.com/dns-query'
      UPSTREAM2: 'https://dns.nextdns.io/'
    expose:
      - "5053/tcp"
      - "5053/udp"
    restart: unless-stopped
    networks:
      pihole_net:
        ipv4_address: 10.42.67.2

  pihole:
    depends_on:
      - cloudflared
    image: registry.gitlab.com/alexhaydock/pihole:latest
    container_name: pihole
    hostname: "pihole"
    ports:
      # Listen globally for DNS queries (we'll block this with a cloud firewall anyway)
      - "0.0.0.0:53:53/tcp"
      - "0.0.0.0:53:53/udp"
      # Access Pi-Hole WebUI locally with: 'ssh user@thishost -L 3141:127.0.0.1:3141'
      - "127.0.0.1:3141:3141/tcp"
    environment:
      TZ: 'Europe/London'
      WEBPASSWORD: 'correct-horse-battery-staple'
      DNS1: '10.42.67.2#5053'
      DNS2: 'no'
      # We don't want this since Unbound handles DNSSEC further upstream.
      DNSSEC: 'false'
      DNSMASQ_LISTENING: 'all'
      IPv6: 'true'
      # The two ENV vars below are needed to stop the WebUI breaking when we use it on a port other than the default (:80)
      VIRTUAL_HOST: '127.0.0.1:3141'
      WEB_PORT: '3141'
    dns:
      - 127.0.0.1
      - 1.1.1.1
    restart: unless-stopped
    networks:
      pihole_net:
        ipv4_address: 10.42.67.3

  # This will require some extra config and won't "just work"
  # See my deployment configs at: https://gitlab.com/alexhaydock/cloud-quickstart-projects
  nginx-dns-to-doh:
    depends_on:
      - pihole
    image: nginx:stable-alpine
    container_name: nginx-dns-to-doh
    volumes:
      - '/home/{{ ansible_user }}/pihole/nginx-public-resolver.conf:/etc/nginx/nginx.conf:Z'
      - '/home/{{ ansible_user }}/pihole/nginx-dns/njs.d:/etc/nginx/njs.d:Z'  # git clone https://github.com/TuxInvader/nginx-dns.git /home/ubuntu/compose/nginx-dns
    expose:
      - "80/tcp"
    environment:
      VIRTUAL_PORT: "80"  # for nginx-proxy container
      VIRTUAL_HOST: "{{ __hostname }}.{{ __domain }}"  # for nginx-proxy container
      LETSENCRYPT_HOST: "{{ __hostname }}.{{ __domain }}"  # for nginx-proxy-letsencrypt container
    restart: unless-stopped
    networks:
      pihole_net:
        ipv4_address: 10.42.67.4

  nginx-proxy:
    depends_on:
      - nginx-dns-to-doh
    image: jwilder/nginx-proxy:latest
    container_name: nginx-proxy
    hostname: "{{ __hostname }}.{{ __domain }}"
    ports:
      - "0.0.0.0:80:80/tcp"
      - "0.0.0.0:443:443/tcp"
    volumes:
      - '/home/{{ ansible_user }}/nginx/conf:/etc/nginx/conf.d:z'
      - '/home/{{ ansible_user }}/nginx/vhost:/etc/nginx/vhost.d:z'
      - '/home/{{ ansible_user }}/nginx/html:/usr/share/nginx/html:z'
      - '/home/{{ ansible_user }}/nginx/dhparam:/etc/nginx/dhparam:z'
      - '/home/{{ ansible_user }}/nginx/certs:/etc/nginx/certs:z'
      - '/var/run/docker.sock:/tmp/docker.sock:ro'  # Pay close attention as the mount location is different between these two containers.
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    restart: unless-stopped
    networks:
      pihole_net:
        ipv4_address: 10.42.67.5

  nginx-proxy-letsencrypt:
    depends_on:
      - nginx-proxy
    image: jrcs/letsencrypt-nginx-proxy-companion:latest
    container_name: nginx-proxy-letsencrypt
    volumes:
      - '/home/{{ ansible_user }}/nginx/conf:/etc/nginx/conf.d:z'
      - '/home/{{ ansible_user }}/nginx/vhost:/etc/nginx/vhost.d:z'
      - '/home/{{ ansible_user }}/nginx/html:/usr/share/nginx/html:z'
      - '/home/{{ ansible_user }}/nginx/dhparam:/etc/nginx/dhparam:z'
      - '/home/{{ ansible_user }}/nginx/certs:/etc/nginx/certs:z'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'  # Pay close attention as the mount location is different between these two containers.
    restart: unless-stopped
    networks:
      pihole_net:
        ipv4_address: 10.42.67.6

networks:
  pihole_net:
    name: pihole_network
    driver: bridge
    ipam:
      config:
        - subnet: 10.42.67.0/24
...
